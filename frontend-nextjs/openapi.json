{
  "openapi": "3.1.0",
  "info": { "title": "Full Stack FastAPI Project", "version": "0.1.0" },
  "paths": {
    "/api/v1/login/access-token": {
      "post": {
        "tags": ["login"],
        "summary": "Login Access Token",
        "description": "OAuth2 compatible token login, get an access token for future requests",
        "operationId": "login-login_access_token",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login-login_access_token"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Token" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/login/test-token": {
      "post": {
        "tags": ["login"],
        "summary": "Test Token",
        "description": "Test access token",
        "operationId": "login-test_token",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserPublic" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/password-recovery/{email}": {
      "post": {
        "tags": ["login"],
        "summary": "Recover Password",
        "description": "Password Recovery",
        "operationId": "login-recover_password",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Email" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Message" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/reset-password/": {
      "post": {
        "tags": ["login"],
        "summary": "Reset Password",
        "description": "Reset password",
        "operationId": "login-reset_password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NewPassword" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Message" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/password-recovery-html-content/{email}": {
      "post": {
        "tags": ["login"],
        "summary": "Recover Password Html Content",
        "description": "HTML Content for Password Recovery",
        "operationId": "login-recover_password_html_content",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Email" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "text/html": { "schema": { "type": "string" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/": {
      "get": {
        "tags": ["users"],
        "summary": "Read Users",
        "description": "Retrieve users.",
        "operationId": "users-read_users",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 0, "title": "Skip" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 100, "title": "Limit" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UsersPublic" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["users"],
        "summary": "Create User",
        "description": "Create new user.",
        "operationId": "users-create_user",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserCreate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserPublic" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/me": {
      "get": {
        "tags": ["users"],
        "summary": "Read User Me",
        "description": "Get current user.",
        "operationId": "users-read_user_me",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserPublic" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "delete": {
        "tags": ["users"],
        "summary": "Delete User Me",
        "description": "Delete own user.",
        "operationId": "users-delete_user_me",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Message" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "patch": {
        "tags": ["users"],
        "summary": "Update User Me",
        "description": "Update own user.",
        "operationId": "users-update_user_me",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserUpdateMe" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserPublic" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/users/me/password": {
      "patch": {
        "tags": ["users"],
        "summary": "Update Password Me",
        "description": "Update own password.",
        "operationId": "users-update_password_me",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdatePassword" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Message" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/users/signup": {
      "post": {
        "tags": ["users"],
        "summary": "Register User",
        "description": "Create new user without the need to be logged in.",
        "operationId": "users-register_user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserRegister" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserPublic" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user_id}": {
      "get": {
        "tags": ["users"],
        "summary": "Read User By Id",
        "description": "Get a specific user by id.",
        "operationId": "users-read_user_by_id",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "User Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserPublic" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["users"],
        "summary": "Update User",
        "description": "Update a user.",
        "operationId": "users-update_user",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "User Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserPublic" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["users"],
        "summary": "Delete User",
        "description": "Delete a user.",
        "operationId": "users-delete_user",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "User Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Message" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/utils/test-email/": {
      "post": {
        "tags": ["utils"],
        "summary": "Test Email",
        "description": "Test emails.",
        "operationId": "utils-test_email",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "email_to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email",
              "title": "Email To"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Message" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/utils/health-check/": {
      "get": {
        "tags": ["utils"],
        "summary": "Health Check",
        "operationId": "utils-health_check",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "title": "Response Utils-Health Check"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/items/": {
      "get": {
        "tags": ["items"],
        "summary": "Read Items",
        "description": "Retrieve items.",
        "operationId": "items-read_items",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 0, "title": "Skip" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 100, "title": "Limit" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ItemsPublic" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["items"],
        "summary": "Create Item",
        "description": "Create new item.",
        "operationId": "items-create_item",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ItemCreate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ItemPublic" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/items/{id}": {
      "get": {
        "tags": ["items"],
        "summary": "Read Item",
        "description": "Get item by ID.",
        "operationId": "items-read_item",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ItemPublic" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["items"],
        "summary": "Update Item",
        "description": "Update an item.",
        "operationId": "items-update_item",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ItemUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ItemPublic" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["items"],
        "summary": "Delete Item",
        "description": "Delete an item.",
        "operationId": "items-delete_item",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Message" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/colpali/search": {
      "post": {
        "tags": ["colpali"],
        "summary": "Search Documents",
        "description": "Search for documents using ColPali semantic search.\n\nThis endpoint allows users to search through embedded documents using natural language queries.\nThe search uses ColPali's multimodal embedding approach with reranking for improved results.",
        "operationId": "colpali-search_documents",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ColPaliSearchRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColPaliSearchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/colpali/upload": {
      "post": {
        "tags": ["colpali"],
        "summary": "Upload Dataset",
        "description": "Upload a dataset to Qdrant collection for ColPali search.\n\nThis endpoint processes and embeds documents from a specified dataset,\nthen uploads them to a Qdrant collection for later search operations.\nThe upload process runs in the background to avoid request timeouts.",
        "operationId": "colpali-upload_dataset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ColPaliUploadRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColPaliUploadResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/colpali/collections": {
      "get": {
        "tags": ["colpali"],
        "summary": "List Collections",
        "description": "List all available Qdrant collections.\n\nReturns a list of collection names that are available for search operations.",
        "operationId": "colpali-list_collections",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "type": "array",
                  "title": "Response Colpali-List Collections"
                }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/colpali/collections/{collection_name}/info": {
      "get": {
        "tags": ["colpali"],
        "summary": "Get Collection Info",
        "description": "Get information about a specific collection.\n\nReturns metadata and statistics about the specified collection.",
        "operationId": "colpali-get_collection_info",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "collection_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Collection Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "title": "Response Colpali-Get Collection Info" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/colpali/collections/{collection_name}": {
      "delete": {
        "tags": ["colpali"],
        "summary": "Delete Collection",
        "description": "Delete a collection and all its data.\n\nWARNING: This operation is irreversible and will delete all embedded documents\nin the specified collection.",
        "operationId": "colpali-delete_collection",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "collection_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Collection Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Message" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/colpali/collections/{collection_name}/create": {
      "post": {
        "tags": ["colpali"],
        "summary": "Create Collection",
        "description": "Create a new empty collection for ColPali embeddings.\n\nCreates a new Qdrant collection with the appropriate vector configuration\nfor ColPali embeddings (original, mean_pooling_rows, mean_pooling_columns).",
        "operationId": "colpali-create_collection",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "collection_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Collection Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Message" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/colpali/health": {
      "get": {
        "tags": ["colpali"],
        "summary": "Health Check",
        "description": "Health check endpoint for ColPali service.\n\nVerifies that the ColPali model, Qdrant client, and other dependencies\nare properly initialized and accessible.",
        "operationId": "colpali-health_check",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "title": "Response Colpali-Health Check" }
              }
            }
          }
        }
      }
    },
    "/api/v1/private/users/": {
      "post": {
        "tags": ["private"],
        "summary": "Create User",
        "description": "Create a new user.",
        "operationId": "private-create_user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PrivateUserCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserPublic" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Body_login-login_access_token": {
        "properties": {
          "grant_type": {
            "anyOf": [
              { "type": "string", "pattern": "password" },
              { "type": "null" }
            ],
            "title": "Grant Type"
          },
          "username": { "type": "string", "title": "Username" },
          "password": { "type": "string", "title": "Password" },
          "scope": { "type": "string", "title": "Scope", "default": "" },
          "client_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": ["username", "password"],
        "title": "Body_login-login_access_token"
      },
      "ColPaliSearchRequest": {
        "properties": {
          "query": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 1,
            "title": "Query",
            "description": "Search query for ColPali"
          },
          "collection_name": {
            "type": "string",
            "title": "Collection Name",
            "description": "Qdrant collection name",
            "default": "le-collection"
          },
          "search_limit": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Search Limit",
            "description": "Number of results to return",
            "default": 20
          },
          "prefetch_limit": {
            "type": "integer",
            "maximum": 1000.0,
            "minimum": 1.0,
            "title": "Prefetch Limit",
            "description": "Number of results to prefetch",
            "default": 200
          }
        },
        "type": "object",
        "required": ["query"],
        "title": "ColPaliSearchRequest"
      },
      "ColPaliSearchResponse": {
        "properties": {
          "results": {
            "items": { "$ref": "#/components/schemas/ColPaliSearchResult" },
            "type": "array",
            "title": "Results"
          },
          "query": { "type": "string", "title": "Query" },
          "collection_name": { "type": "string", "title": "Collection Name" },
          "total_results": { "type": "integer", "title": "Total Results" }
        },
        "type": "object",
        "required": ["results", "query", "collection_name", "total_results"],
        "title": "ColPaliSearchResponse"
      },
      "ColPaliSearchResult": {
        "properties": {
          "score": {
            "type": "number",
            "title": "Score",
            "description": "Similarity score"
          },
          "payload": {
            "type": "object",
            "title": "Payload",
            "description": "Document metadata"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Document ID"
          }
        },
        "type": "object",
        "required": ["score", "payload", "id"],
        "title": "ColPaliSearchResult"
      },
      "ColPaliUploadRequest": {
        "properties": {
          "dataset_name": {
            "type": "string",
            "title": "Dataset Name",
            "description": "Name of the dataset to upload"
          },
          "collection_name": {
            "type": "string",
            "title": "Collection Name",
            "description": "Qdrant collection name",
            "default": "le-collection"
          },
          "batch_size": {
            "type": "integer",
            "maximum": 16.0,
            "minimum": 1.0,
            "title": "Batch Size",
            "description": "Batch size for processing",
            "default": 4
          }
        },
        "type": "object",
        "required": ["dataset_name"],
        "title": "ColPaliUploadRequest"
      },
      "ColPaliUploadResponse": {
        "properties": {
          "message": { "type": "string", "title": "Message" },
          "collection_name": { "type": "string", "title": "Collection Name" },
          "total_uploaded": { "type": "integer", "title": "Total Uploaded" },
          "total_items": { "type": "integer", "title": "Total Items" },
          "success": { "type": "boolean", "title": "Success" }
        },
        "type": "object",
        "required": [
          "message",
          "collection_name",
          "total_uploaded",
          "total_items",
          "success"
        ],
        "title": "ColPaliUploadResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": { "$ref": "#/components/schemas/ValidationError" },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ItemCreate": {
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Title"
          },
          "description": {
            "anyOf": [
              { "type": "string", "maxLength": 255 },
              { "type": "null" }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": ["title"],
        "title": "ItemCreate"
      },
      "ItemPublic": {
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Title"
          },
          "description": {
            "anyOf": [
              { "type": "string", "maxLength": 255 },
              { "type": "null" }
            ],
            "title": "Description"
          },
          "id": { "type": "string", "format": "uuid", "title": "Id" },
          "owner_id": {
            "type": "string",
            "format": "uuid",
            "title": "Owner Id"
          }
        },
        "type": "object",
        "required": ["title", "id", "owner_id"],
        "title": "ItemPublic"
      },
      "ItemUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              { "type": "string", "maxLength": 255, "minLength": 1 },
              { "type": "null" }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              { "type": "string", "maxLength": 255 },
              { "type": "null" }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "title": "ItemUpdate"
      },
      "ItemsPublic": {
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/ItemPublic" },
            "type": "array",
            "title": "Data"
          },
          "count": { "type": "integer", "title": "Count" }
        },
        "type": "object",
        "required": ["data", "count"],
        "title": "ItemsPublic"
      },
      "Message": {
        "properties": { "message": { "type": "string", "title": "Message" } },
        "type": "object",
        "required": ["message"],
        "title": "Message"
      },
      "NewPassword": {
        "properties": {
          "token": { "type": "string", "title": "Token" },
          "new_password": {
            "type": "string",
            "maxLength": 40,
            "minLength": 8,
            "title": "New Password"
          }
        },
        "type": "object",
        "required": ["token", "new_password"],
        "title": "NewPassword"
      },
      "PrivateUserCreate": {
        "properties": {
          "email": { "type": "string", "title": "Email" },
          "password": { "type": "string", "title": "Password" },
          "full_name": { "type": "string", "title": "Full Name" },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified",
            "default": false
          }
        },
        "type": "object",
        "required": ["email", "password", "full_name"],
        "title": "PrivateUserCreate"
      },
      "Token": {
        "properties": {
          "access_token": { "type": "string", "title": "Access Token" },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          }
        },
        "type": "object",
        "required": ["access_token"],
        "title": "Token"
      },
      "UpdatePassword": {
        "properties": {
          "current_password": {
            "type": "string",
            "maxLength": 40,
            "minLength": 8,
            "title": "Current Password"
          },
          "new_password": {
            "type": "string",
            "maxLength": 40,
            "minLength": 8,
            "title": "New Password"
          }
        },
        "type": "object",
        "required": ["current_password", "new_password"],
        "title": "UpdatePassword"
      },
      "UserCreate": {
        "properties": {
          "email": {
            "type": "string",
            "maxLength": 255,
            "format": "email",
            "title": "Email"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "is_superuser": {
            "type": "boolean",
            "title": "Is Superuser",
            "default": false
          },
          "full_name": {
            "anyOf": [
              { "type": "string", "maxLength": 255 },
              { "type": "null" }
            ],
            "title": "Full Name"
          },
          "password": {
            "type": "string",
            "maxLength": 40,
            "minLength": 8,
            "title": "Password"
          }
        },
        "type": "object",
        "required": ["email", "password"],
        "title": "UserCreate"
      },
      "UserPublic": {
        "properties": {
          "email": {
            "type": "string",
            "maxLength": 255,
            "format": "email",
            "title": "Email"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "is_superuser": {
            "type": "boolean",
            "title": "Is Superuser",
            "default": false
          },
          "full_name": {
            "anyOf": [
              { "type": "string", "maxLength": 255 },
              { "type": "null" }
            ],
            "title": "Full Name"
          },
          "id": { "type": "string", "format": "uuid", "title": "Id" }
        },
        "type": "object",
        "required": ["email", "id"],
        "title": "UserPublic"
      },
      "UserRegister": {
        "properties": {
          "email": {
            "type": "string",
            "maxLength": 255,
            "format": "email",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "maxLength": 40,
            "minLength": 8,
            "title": "Password"
          },
          "full_name": {
            "anyOf": [
              { "type": "string", "maxLength": 255 },
              { "type": "null" }
            ],
            "title": "Full Name"
          }
        },
        "type": "object",
        "required": ["email", "password"],
        "title": "UserRegister"
      },
      "UserUpdate": {
        "properties": {
          "email": {
            "anyOf": [
              { "type": "string", "maxLength": 255, "format": "email" },
              { "type": "null" }
            ],
            "title": "Email"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "is_superuser": {
            "type": "boolean",
            "title": "Is Superuser",
            "default": false
          },
          "full_name": {
            "anyOf": [
              { "type": "string", "maxLength": 255 },
              { "type": "null" }
            ],
            "title": "Full Name"
          },
          "password": {
            "anyOf": [
              { "type": "string", "maxLength": 40, "minLength": 8 },
              { "type": "null" }
            ],
            "title": "Password"
          }
        },
        "type": "object",
        "title": "UserUpdate"
      },
      "UserUpdateMe": {
        "properties": {
          "full_name": {
            "anyOf": [
              { "type": "string", "maxLength": 255 },
              { "type": "null" }
            ],
            "title": "Full Name"
          },
          "email": {
            "anyOf": [
              { "type": "string", "maxLength": 255, "format": "email" },
              { "type": "null" }
            ],
            "title": "Email"
          }
        },
        "type": "object",
        "title": "UserUpdateMe"
      },
      "UsersPublic": {
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/UserPublic" },
            "type": "array",
            "title": "Data"
          },
          "count": { "type": "integer", "title": "Count" }
        },
        "type": "object",
        "required": ["data", "count"],
        "title": "UsersPublic"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": { "scopes": {}, "tokenUrl": "/api/v1/login/access-token" }
        }
      }
    }
  }
}
